image: node:18-alpine
services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''

stages:
  - build
  - deploy

before_script:
  - apk add git
  - apk add openssh-client
  - eval $(ssh-agent -s)
  - echo "${SSH_PRIVATE_KEY}" | ssh-add -
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.build_backend: &build_backend
  script:
    - cd backend
    - npm i @nestjs/cli
    - npm install
    - npm run build
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA

.build_frontend: &build_frontend
  script:
    - cd frontend
    - npm install
    - npm run build
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA


deploy-stage:
  when: manual
  stage: deploy
  needs: [build]
  script:
    - export TF_VAR_vp_artifactory_token=$ARTIFACTORY_TOKEN
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - cd deployment
    - docker-compose -f docker-compose.staging.yml up -d

deploy-staging:
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export TF_VAR_vp_artifactory_token=$ARTIFACTORY_TOKEN
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA $ECR_REPO/backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $ECR_REPO/frontend:$CI_COMMIT_SHA
    - docker push $ECR_REPO/backend:$CI_COMMIT_SHA
    - docker push $ECR_REPO/frontend:$CI_COMMIT_SHA

deploy-prod:
  when: manual
  stage: deploy
  only:
    - main
  needs: [build]
  script:
    - export TF_VAR_vp_artifactory_token=$ARTIFACTORY_TOKEN
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA $ECR_REPO/backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $ECR_REPO/frontend:$CI_COMMIT_SHA
    - docker push $ECR_REPO/backend:$CI_COMMIT_SHA
    - docker push $ECR_REPO/frontend:$CI_COMMIT_SHA
    - cd deployment
    
